"use strict";

exports.__esModule = true;
exports.Wrap = void 0;

var _system = require("@chakra-ui/system");

var _utils = require("@chakra-ui/utils");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Layout component used to stack elements that differ in length
 * and are liable to wrap.
 *
 * Common use cases:
 * - Buttons that appear together at the end of forms
 * - Lists of tags and chips
 *
 * @see Docs https://chakra-ui.com/components/wrap
 */
var Wrap = /*#__PURE__*/(0, _system.forwardRef)(function Wrap(props, ref) {
  var _props$spacing = props.spacing,
      spacing = _props$spacing === void 0 ? "0.5rem" : _props$spacing,
      children = props.children,
      justify = props.justify,
      direction = props.direction,
      align = props.align,
      rest = _objectWithoutPropertiesLoose(props, ["spacing", "children", "justify", "direction", "align"]);

  var theme = (0, _system.useTheme)();
  var itemSpacing = (0, _utils.mapResponsive)(spacing, function (value) {
    var _css = (0, _system.css)({
      margin: value
    })(theme),
        margin = _css.margin;

    return "calc(" + margin + " / 2)";
  });
  var groupSpacing = (0, _utils.mapResponsive)(spacing, function (value) {
    var _css2 = (0, _system.css)({
      margin: value
    })(theme),
        margin = _css2.margin;

    return "calc(" + margin + " / 2 * -1)";
  });
  var validChildren = (0, _utils.getValidChildren)(children);
  var clones = validChildren.map(function (child, index) {
    return /*#__PURE__*/React.createElement(_system.chakra.li, {
      key: index,
      margin: itemSpacing,
      display: "inline-flex"
    }, child);
  });
  return /*#__PURE__*/React.createElement(_system.chakra.div, _extends({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(_system.chakra.ul, {
    __css: {
      display: "flex",
      flexWrap: "wrap",
      justifyContent: justify,
      alignItems: align,
      flexDirection: direction,
      listStyleType: "none",
      padding: "0",
      margin: groupSpacing
    }
  }, clones));
});
exports.Wrap = Wrap;

if (_utils.__DEV__) {
  Wrap.displayName = "Wrap";
}

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _theme = _interopRequireDefault(require("@chakra-ui/theme"));

var _resolveConfig = _interopRequireDefault(require("tailwindcss/resolveConfig"));

var _tailwind = _interopRequireDefault(require("../../tailwind.config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var tailwind = (0, _resolveConfig["default"])(_tailwind["default"]).theme;

var _default = _objectSpread(_objectSpread({}, _theme["default"]), {}, {
  contentWidth: '1240px',
  colors: _objectSpread(_objectSpread({}, _theme["default"].colors), {}, {
    brand: tailwind.colors.brand,
    brandAlt: tailwind.colors.brandAlt
  }),
  fonts: _objectSpread(_objectSpread({}, _theme["default"].fonts), {}, {
    body: tailwind.fontFamily.sans.join(','),
    heading: tailwind.fontFamily.head.join(','),
    serif: tailwind.fontFamily.serif.join(','),
    arabic: tailwind.fontFamily.arabic.join(','),
    mono: tailwind.fontFamily.mono.join(',')
  }),
  fontSizes: _objectSpread(_objectSpread({}, _theme["default"].fontSizes), {}, {
    '2xs': '11px',
    '7xl': '5rem',
    '8xl': '7rem'
  })
});

exports["default"] = _default;
"use strict";

exports.__esModule = true;
exports.CheckboxIcon = void 0;

var React = _interopRequireWildcard(require("react"));

var _icon = require("@chakra-ui/icon");

var _utils = require("@chakra-ui/utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * CheckboxIcon is used to visually indicate the checked or indeterminate
 * state of a checkbox.
 *
 * @todo allow users pass their own icon svgs
 */
var CheckboxIcon = function CheckboxIcon(props) {
  var isIndeterminate = props.isIndeterminate;
  var iconProps = (0, _utils.omit)(props, ["isChecked", "isIndeterminate"]);
  return /*#__PURE__*/React.createElement(_icon.Icon, iconProps, isIndeterminate ? /*#__PURE__*/React.createElement("rect", {
    fill: "currentColor",
    height: "4",
    width: "20",
    x: "2",
    y: "10"
  }) : /*#__PURE__*/React.createElement("polygon", {
    fill: "currentColor",
    points: "9 21 1 13 4 10 9 15 21 3 24 6 9 21"
  }));
};

exports.CheckboxIcon = CheckboxIcon;

"use strict";

exports.__esModule = true;
exports.transitionConfigToCSS = transitionConfigToCSS;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function toCSSTransition(transition) {
  return {
    transitionTimingFunction: transition.easing,
    transitionProperty: transition.property,
    transitionDuration: transition.duration
  };
}

function transitionConfigToCSS(config, className) {
  var _enter$transition, _exit$transition, _extends2, _ref, _ref2;

  var addDoneStyles = config.addDoneStyles,
      addAppearStyles = config.addAppearStyles,
      enter = config.enter,
      exit = config.exit,
      transition = config.transition;
  var enterClass = addAppearStyles ? "&-enter, &-appear" : "&-enter";
  var enterDoneClass = addAppearStyles ? "&-enter-done, &-appear-done" : "&-enter-done";
  var enterActiveClass = addAppearStyles ? "&-enter-active, &-appear-active" : "&-enter-active";
  var enterTransition = (_enter$transition = enter.transition) != null ? _enter$transition : transition;
  var exitTransition = (_exit$transition = exit.transition) != null ? _exit$transition : transition;
  return _ref2 = {}, _ref2["&." + className] = _extends({}, addDoneStyles && enter.from, (_extends2 = {}, _extends2[enterClass] = enter.from, _extends2[enterActiveClass] = _extends({}, enter.to, enterTransition && toCSSTransition(enterTransition)), _extends2), addDoneStyles && (_ref = {}, _ref[enterDoneClass] = enter.to, _ref), {
    "&-exit": exit.from,
    "&-exit-active": _extends({}, exit.to, exitTransition && toCSSTransition(exitTransition))
  }, addDoneStyles && {
    "&-exit-done": exit.to
  }), _ref2;
}

"use strict";

exports.__esModule = true;
exports.DrawerCloseButton = exports.DrawerFooter = exports.DrawerHeader = exports.DrawerBody = exports.DrawerOverlay = exports.DrawerContent = exports.Drawer = void 0;

var React = _interopRequireWildcard(require("react"));

var _transition = require("@chakra-ui/transition");

var _modal = require("@chakra-ui/modal");

exports.DrawerBody = _modal.ModalBody;
exports.DrawerHeader = _modal.ModalHeader;
exports.DrawerFooter = _modal.ModalFooter;
exports.DrawerCloseButton = _modal.ModalCloseButton;

var _system = require("@chakra-ui/system");

var _utils = require("@chakra-ui/utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TransitionContext = /*#__PURE__*/React.createContext({
  content: {},
  overlay: {}
});
TransitionContext.displayName = "TransitionContext";

var useTransitionContext = function useTransitionContext() {
  return React.useContext(TransitionContext);
};

var DrawerTransition = function DrawerTransition(props) {
  var inProp = props["in"],
      children = props.children,
      placement = props.placement;
  return /*#__PURE__*/React.createElement(_transition.Slide, {
    timeout: 250,
    "in": inProp,
    placement: placement,
    transition: "transform 250ms cubic-bezier(0.16, 1, 0.3, 1)"
  }, function (content) {
    return /*#__PURE__*/React.createElement(_transition.Fade, {
      timeout: 250,
      "in": inProp,
      transition: "opacity 250ms cubic-bezier(0.16, 1, 0.3, 1)"
    }, function (overlay) {
      return /*#__PURE__*/React.createElement(TransitionContext.Provider, {
        value: {
          content: content,
          overlay: overlay
        }
      }, children);
    });
  });
};

if (_utils.__DEV__) {
  DrawerTransition.displayName = "DrawerTransition";
}

var Drawer = function Drawer(props) {
  var _theme$components;

  var isOpen = props.isOpen,
      onClose = props.onClose,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? "right" : _props$placement,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["isOpen", "onClose", "placement", "children"]);

  var theme = (0, _system.useTheme)();
  var drawerStyleConfig = (_theme$components = theme.components) == null ? void 0 : _theme$components.Drawer;
  return /*#__PURE__*/React.createElement(DrawerTransition, {
    "in": isOpen,
    placement: placement
  }, /*#__PURE__*/React.createElement(_modal.Modal, _extends({
    isOpen: true,
    onClose: onClose,
    styleConfig: drawerStyleConfig
  }, rest), children));
};

exports.Drawer = Drawer;
var DrawerContent = /*#__PURE__*/(0, _system.forwardRef)(function (props, ref) {
  var _useTransitionContext = useTransitionContext(),
      styles = _useTransitionContext.content;

  return /*#__PURE__*/React.createElement(_modal.ModalContent, _extends({
    ref: ref,
    position: "fixed",
    style: styles,
    marginTop: "0",
    marginBottom: "0",
    borderRadius: "0"
  }, props));
});
exports.DrawerContent = DrawerContent;
var DrawerOverlay = /*#__PURE__*/(0, _system.forwardRef)(function (props, ref) {
  var _useTransitionContext2 = useTransitionContext(),
      styles = _useTransitionContext2.overlay;

  return /*#__PURE__*/React.createElement(_modal.ModalOverlay, _extends({
    style: styles,
    ref: ref
  }, props));
});
exports.DrawerOverlay = DrawerOverlay;
